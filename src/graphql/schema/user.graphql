type User {
  id: Int
  name: String
  email: String
  role: String
}

input SignUpInput {
  name: String
  email: String
  password: String
}

type signupOK {
  user: User
}

type token {
  token: String
  user: User
  error: Error
}

type getNameOK {
  data: [User]
  paginationRes: PaginationRes
}

union getNameRes = getNameOK | Error
union loginRes = token | Error
union signUpRes = signupOK | Error

type Query {
  getAllUser(paginationInput: PaginationInput): getNameRes
  login(email: String, password: String): loginRes
}

type Mutation {
  signUpUsers(signUpInput: SignUpInput): signUpRes
}
